networks:
  default:
    driver: bridge
    ipam:
      driver: default
  nextcloud:
    driver: bridge
    internal: true
    ipam:
      driver: default

services:
  grafana:
    container_name: grafana
    image: grafana/grafana
    restart: unless-stopped
    user: "0"
    ports:
      - "3000:3000"
    environment:
      - TZ=Etc/UTC
      - GF_PATHS_DATA=/var/lib/grafana
      - GF_PATHS_LOGS=/var/log/grafana
      - GF_SMTP_ENABLED=true
      - GF_SMTP_HOST=smtp-mail.outlook.com:587
      - GF_SMTP_USER=sirprojectco@outlook.com
      - GF_SMTP_PASSWORD=Aqzsedrft123
      - GF_SMTP_SKIP_VERIFY=true
      - GF_SMTP_FROM_NAME=grafana
      - GF_SMTP_FROM_ADDRESS=sirprojectco@outlook.com
    volumes:
      - ./volumes/grafana/data:/var/lib/grafana
      - ./volumes/grafana/log:/var/log/grafana
    healthcheck:
      test:
        [
          "CMD",
          "wget",
          "-O",
          "/dev/null",
          "http://localhost:3000"
        ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  influxdb:
    container_name: influxdb
    image: "influxdb:1.8"
    restart: unless-stopped
    ports:
      - "8086:8086"
    environment:
      - TZ=Etc/UTC
      - INFLUXDB_HTTP_FLUX_ENABLED=false
      - INFLUXDB_REPORTING_DISABLED=false
      - INFLUXDB_HTTP_AUTH_ENABLED=false
      - INFLUXDB_MONITOR_STORE_ENABLED=FALSE
    # - INFLUX_USERNAME=dba
    # - INFLUX_PASSWORD=supremo
    # - INFLUXDB_UDP_ENABLED=false
    # - INFLUXDB_UDP_BIND_ADDRESS=0.0.0.0:8086
    # - INFLUXDB_UDP_DATABASE=udp
    volumes:
      - ./volumes/influxdb/data:/var/lib/influxdb
      - ./backups/influxdb/db:/var/lib/influxdb/backup
    healthcheck:
      test: [ "CMD", "curl", "http://localhost:8086" ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  mosquitto:
    container_name: mosquitto
    build:
      context: ./.templates/mosquitto/.
      args:
        - MOSQUITTO_BASE=eclipse-mosquitto:latest
    restart: unless-stopped
    environment:
      - TZ=${TZ:-Etc/UTC}
    ports:
      - "1883:1883"
    volumes:
      - ./volumes/mosquitto/config:/mosquitto/config
      - ./volumes/mosquitto/data:/mosquitto/data
      - ./volumes/mosquitto/log:/mosquitto/log
      - ./volumes/mosquitto/pwfile:/mosquitto/pwfile

  nodered:
    container_name: nodered
    build:
      context: ./services/nodered/.
      args:
        - DOCKERHUB_TAG=latest
        - EXTRA_PACKAGES=
    restart: unless-stopped
    user: "0"
    environment:
      - TZ=${TZ:-Etc/UTC}
    ports:
      - "1880:1880"
    volumes:
      - ./volumes/nodered/data:/data
      - ./volumes/nodered/ssh:/root/.ssh

  nginx:
    container_name: nginx
    image: nginx:latest
    restart: unless-stopped
    ports:
      - "8080:80"
    volumes:
      - ./volumes/nginx/conf.d:/etc/nginx/conf.d
      - ./volumes/nginx/html:/usr/share/nginx/html
    environment:
      - TZ=${TZ:-Etc/UTC}

  middleware:
    container_name: middleware
    build: ../web/middleware
    ports:
      - '8082:8082'
